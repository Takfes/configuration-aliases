#!/bin/bash
# --------------------------------------------------------------
# general use
# --------------------------------------------------------------

alias nv='nvim'
alias ll='ls -lath'
alias le='exa -la'
alias lz="eza --color=always --long --git --icons=always --no-user --no-permissions"
alias hist='history'

# --------------------------------------------------------------
# custom functions
# --------------------------------------------------------------

show() {
    case "$1" in
    git | shell | python | docker | kube)
        if [ "$2" = "--edit" ] || [ "$2" = "-e" ]; then
            ${EDITOR:-code} ~/.alias_$1
        else
            if command -v bat >/dev/null; then
                bat ~/.alias_$1
            else
                cat ~/.alias_$1
            fi
        fi
        ;;
    *)
        echo "Invalid argument. Please provide one of the following: 'git', 'shell', 'python', 'docker', 'kube'."
        ;;
    esac
}

clean() {
    local directory="$1"
    # Check that the directory exists
    if [ ! -d "$directory" ]; then
        echo "Directory '$directory' not found"
        return
    fi
    # Delete all __pycache__ directories
    find "$directory" -type d -name '__pycache__' -print -exec rm -rf {} \; 2>/dev/null
    # Delete all .DS_Store files
    find "$directory" -type f -name '.DS_Store' -print -exec rm -f {} \; 2>/dev/null
    # Delete all catboost_info files
    find "$directory" -type d -name 'catboost_info' -print -exec rm -r {} \; 2>/dev/null
    # Delete all .ruff_cache files
    find "$directory" -type d -name '.ruff_cache' -print -exec rm -r {} \; 2>/dev/null
    # Delete all .ipynb_checkpoints files
    find "$directory" -type d -name '.ipynb_checkpoints' -print -exec rm -r {} \; 2>/dev/null
}

mkcd() {
    mkdir "$1"
    cd "$1"
}

extract() {
    if [ $# -lt 1 ]; then
        echo "Usage: $(basename "$0") file"
        exit 1
    fi
    if [ -f "$1" ]; then
        case $1 in
        *.tar.xz) tar -xvf "$1" ;;
        *.tar.bz2) tar -jxvf "$1" ;;
        *.tar.gz) tar -zxvf "$1" ;;
        *.bz2) bunzip2 "$1" ;;
        *.dmg) hdiutil mount "$1" ;;
        *.gz) gunzip "$1" ;;
        *.tar) tar -xvf "$1" ;;
        *.tbz2) tar -jxvf "$1" ;;
        *.tgz) tar -zxvf "$1" ;;
        *.zip) unzip "$1" ;;
        *.pax) cat "$1" | pax -r ;;
        *.pax.z) uncompress "$1" --stdout | pax -r ;;
        *.rar) 7z x "$1" ;;
        *.z) uncompress "$1" ;;
        *.7z) 7z x "$1" ;;
        *) echo "'$1' cannot be extracted/mounted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}
